---
import { SITE_TITLE } from '../consts';
import Layout from './Layout.astro';

export interface Props {
	title: string;
	description: string;
	pubDate: Date;
	updatedDate?: Date;
	heroImage?: string;
	author?: string;
	tags?: string[];
}

const { 
	title, 
	description, 
	pubDate, 
	updatedDate, 
	heroImage = '/images/blog/default-hero.jpg',
	author = 'PRODBYGUS',
	tags = []
} = Astro.props;

const canonicalURL = new URL(Astro.url.pathname, Astro.site);
const fullTitle = `${title} | ${SITE_TITLE}`;
---

<Layout
	title={fullTitle}
	description={description}
	image={heroImage}
	ogType="article"
	publishedTime={pubDate.toISOString()}
	modifiedTime={updatedDate?.toISOString()}
>
	<article class="prose prose-lg dark:prose-invert mx-auto">
		<header class="mb-8">
			<h1 class="text-4xl font-bold mb-4">{title}</h1>
			<div class="flex items-center gap-4 text-sm text-gray-600 dark:text-gray-400">
				<time datetime={pubDate.toISOString()}>
					{pubDate.toLocaleDateString('pt-BR', {
						year: 'numeric',
						month: 'long',
						day: 'numeric'
					})}
				</time>
				{updatedDate && (
					<time datetime={updatedDate.toISOString()}>
						Atualizado em {updatedDate.toLocaleDateString('pt-BR', {
							year: 'numeric',
							month: 'long',
							day: 'numeric'
						})}
					</time>
				)}
				<span>â€¢</span>
				<span>{author}</span>
			</div>
			{tags.length > 0 && (
				<div class="flex flex-wrap gap-2 mt-4">
					{tags.map(tag => (
						<a
							href={`/tags/${tag}`}
							class="px-3 py-1 bg-purple-100 dark:bg-purple-900 text-purple-800 dark:text-purple-100 rounded-full text-sm hover:bg-purple-200 dark:hover:bg-purple-800 transition-colors"
						>
							#{tag}
						</a>
					))}
				</div>
			)}
		</header>

		<slot />
	</article>
</Layout>
