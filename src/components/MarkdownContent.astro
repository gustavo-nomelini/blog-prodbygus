---
import { Image } from 'astro:assets';

interface Props {
  class?: string;
}

const { class: className = '' } = Astro.props;
---

<div class={`prose prose-lg prose-invert 
  prose-headings:text-[var(--primary)] 
  prose-h2:mt-16 prose-h2:text-pretty prose-h2:text-3xl prose-h2:font-semibold prose-h2:tracking-tight
  prose-a:text-[var(--accent)] 
  prose-strong:text-[var(--highlight)]
  prose-code:text-[var(--highlight)] prose-pre:bg-transparent prose-pre:p-0
  prose-blockquote:border-l-[var(--primary)] prose-blockquote:bg-surface-10 prose-blockquote:p-4 prose-blockquote:rounded-r-md
  prose-img:rounded-xl prose-img:shadow-md 
  prose-li:marker:text-[var(--primary)]
  ${className}`}>
  <slot />
</div>

<script>
  // Process images after DOM loads
  document.addEventListener('DOMContentLoaded', () => {
    // Select all images in Markdown content
    const contentImages = document.querySelectorAll('.prose img');
    
    // Add attributes for optimized loading
    contentImages.forEach(img => {
      // Ensure img is an HTMLImageElement
      if (img instanceof HTMLImageElement) {
        // Add lazy loading if not defined
        if (!img.hasAttribute('loading')) {
          img.setAttribute('loading', 'lazy');
        }
        
        // Add async decoding
        if (!img.hasAttribute('decoding')) {
          img.setAttribute('decoding', 'async');
        }
        
        // Add styling class
        img.classList.add('rounded-xl', 'shadow-md');
        
        // Try to add width and height if not defined
        // to avoid layout shifts
        if (!img.hasAttribute('width') && !img.hasAttribute('height')) {
          img.addEventListener('load', () => {
            // On first load, set width and height based on what was loaded
            if (img.naturalWidth && img.naturalHeight) {
              img.setAttribute('width', img.naturalWidth.toString());
              img.setAttribute('height', img.naturalHeight.toString());
            }
          });
        }
      }
    });
  });
</script>

<style is:global>
  /* Styling for code blocks with enhanced appearance */
  .prose pre {
    background-color: transparent;
    margin: 0;
    overflow-x: auto;
    font-size: 0.9rem;
    line-height: 1.6;
    position: relative;
    border-radius: 0.5rem;
  }
</style> 