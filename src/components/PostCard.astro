---
import type { CollectionEntry } from 'astro:content';
import CategoryBadge from './CategoryBadge.astro';
import FormattedDate from './FormattedDate.astro';
import OptimizedImage from './OptimizedImage.astro';

interface Props {
  post: CollectionEntry<'blog'>;
  variant?: 'grid' | 'list';
}

const { post, variant = 'grid' } = Astro.props;

// Lidar com diferentes formatos de imagem heroImage
let heroImageSrc = post.data.heroImage || '/blog-placeholder-1.jpg';
const postUrl = `/blog/${post.slug}/`;
---

{variant === 'grid' ? (
  <article class="card group hover:bg-surface-10 hover:shadow-lg hover:shadow-[var(--primary)]/10 transition-all duration-300">
    <div class="relative flex flex-col">
      <div class="relative aspect-video bg-[var(--surface)]">
        <a href={postUrl} class="block relative overflow-hidden rounded-lg group-hover:scale-[1.01] transition-transform duration-300">
          <OptimizedImage 
            src={heroImageSrc} 
            alt={post.data.title} 
            width={800}
            height={450}
            class="size-full rounded-lg object-contain"
          />
          <div class="absolute inset-0 rounded-lg ring-1 ring-inset ring-[var(--primary)]/20"></div>
        </a>
      </div>
      <div class="mt-6">
        <div class="flex items-center gap-x-4 text-xs">
          <span class="text-[var(--text-muted)]">
            <FormattedDate date={post.data.pubDate} />
          </span>
          {post.data.category && (
            <CategoryBadge 
              category={post.data.category}
              className="relative z-10"
            />
          )}
        </div>
        <div class="group relative max-w-xl">
          <h3 class="mt-3 text-lg/6 font-semibold text-[var(--text)] group-hover:text-[var(--primary)] transition-colors">
            <a href={postUrl}>
              <span class="absolute inset-0"></span>
              {post.data.title}
            </a>
          </h3>
          <p class="mt-3 text-sm/6 text-[var(--text-muted)]">
            {post.data.description}
          </p>
        </div>
      </div>
    </div>
  </article>
) : (
  <article class="flex flex-col sm:flex-row gap-8">
    <div class="sm:w-1/3">
      <a href={postUrl} class="block relative overflow-hidden rounded-lg hover:scale-[1.01] transition-transform duration-300">
        <div class="aspect-video bg-[var(--surface)] rounded-lg">
          <OptimizedImage 
            src={heroImageSrc}
            alt={post.data.title} 
            width={800}
            height={450}
            class="w-full h-full rounded-lg object-contain"
          />
        </div>
        <div class="absolute inset-0 rounded-lg ring-1 ring-inset ring-[var(--primary)]/20"></div>
      </a>
    </div>
    <div class="sm:w-2/3">
      <div class="flex items-center gap-x-4 text-xs">
        <span class="text-[var(--text-muted)]">
          <FormattedDate date={post.data.pubDate} />
        </span>
        {post.data.category && (
          <CategoryBadge 
            category={post.data.category}
            className="relative z-10"
          />
        )}
      </div>
      <div class="group relative">
        <h3 class="mt-3 text-2xl font-semibold text-[var(--text)] group-hover:text-[var(--primary)] transition-colors">
          <a href={postUrl}>
            <span class="absolute inset-0"></span>
            {post.data.title}
          </a>
        </h3>
        <p class="mt-4 text-base/7 text-[var(--text-muted)]">
          {post.data.description}
        </p>
      </div>
      <div class="mt-4">
        <a href={postUrl} class="inline-flex items-center text-sm font-medium text-[var(--primary)] hover:text-[var(--accent)] transition-colors">
          Continue lendo
          <svg class="ml-1 h-4 w-4" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" d="M13.5 4.5L21 12m0 0l-7.5 7.5M21 12H3"></path>
          </svg>
        </a>
      </div>
    </div>
  </article>
)}