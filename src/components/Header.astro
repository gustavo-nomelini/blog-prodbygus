---
const currentYear = "2025";
const navLinks = [
	{ href: '/', text: 'Home' },
	{ href: '/about', text: 'About' },
	{ href: '/projects', text: 'Projects' },
	{ href: '/contact', text: 'Contact' }
];
---

<header id="header" class="fixed top-0 left-0 right-0 z-50 transition-all duration-300 ease-in-out bg-[var(--background)]/85 backdrop-blur-md shadow-sm shadow-transparent">
	<div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
		<div class="flex justify-between items-center h-16">
			<!-- Logo -->
			<div class="flex">
				<a 
					href="/" 
					class="flex-shrink-0 flex items-center group relative transition-all duration-700 ease-in-out scale-100"
					aria-label="Página Inicial"
				>
					<span class="text-xl font-bold transition-all duration-700 ease-in-out text-[var(--color1)] group-hover:text-[var(--color3)] relative after:absolute after:left-0 after:right-0 after:bottom-0 after:h-0.5 after:bg-[var(--color3)] after:origin-right after:scale-x-0 after:transition-transform after:duration-300 group-hover:after:origin-left group-hover:after:scale-x-100">
						Prod by GUS
					</span>
					
					<!-- Tooltip apenas para desktop -->
					<span class="absolute top-full left-1/2 transform -translate-x-1/2 mt-1 px-2 py-1 bg-[var(--color4)] text-[var(--foreground)] text-xs rounded opacity-0 group-hover:opacity-100 transition-opacity duration-300 pointer-events-none whitespace-nowrap hidden md:block">
						Ir para a página inicial
					</span>
				</a>
			</div>

			<!-- Navegação para desktop -->
			<nav class="hidden md:flex items-center space-x-8">
				{navLinks.map(link => (
					<a 
						href={link.href}
						class="relative text-[var(--foreground)] hover:text-[var(--color1)] transition-colors py-2 after:absolute after:left-0 after:bottom-0 after:h-[2px] after:w-0 after:bg-[var(--foreground)] after:transition-all after:duration-300 after:ease-in-out hover:after:w-full"
					>
						{link.text}
					</a>
				))}
			</nav>

			<!-- Botão do menu mobile -->
			<button
				id="menu-button"
				class="md:hidden text-[var(--foreground)] p-2 rounded-md hover:bg-[var(--color4)] transition-colors focus:outline-none"
				aria-label="Abrir menu"
			>
				<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6">
					<path stroke-linecap="round" stroke-linejoin="round" d="M3.75 6.75h16.5M3.75 12h16.5m-16.5 5.25h16.5" />
				</svg>
			</button>
		</div>
	</div>
</header>

<!-- Menu mobile -->
<div 
	id="mobile-menu"
	class="fixed inset-0 z-[100] md:hidden hidden flex-col bg-[var(--background)]/80 backdrop-blur-3xl"
>
	<div class="max-w-7xl w-full mx-auto px-4 sm:px-6 lg:px-8 py-4 flex items-center justify-between">
		<!-- Logo no menu mobile -->
		<a 
			href="/" 
			class="text-xl font-bold text-[var(--color1)]"
		>
			Prod by GUS
		</a>
		
		<!-- Botão para fechar menu -->
		<button
			id="close-menu"
			class="p-2 rounded-full text-[var(--foreground)] bg-[var(--color4)]/60 hover:bg-[var(--color1)]/60 transition-colors"
			aria-label="Fechar menu"
		>
			<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6">
				<path stroke-linecap="round" stroke-linejoin="round" d="M6 18L18 6M6 6l12 12" />
			</svg>
		</button>
	</div>
	
	<!-- Links de navegação - centralizado na tela -->
	<div class="flex-1 flex flex-col justify-center items-center py-8">
		<nav class="w-full max-w-xs mx-auto">
			<ul class="space-y-8">
				{navLinks.map((link) => (
					<li class="text-center">
						<a
							href={link.href}
							class="text-2xl font-medium relative inline-block text-[var(--foreground)] transition-colors duration-300 hover:text-[var(--color1)]"
						>
							{link.text}
							<span class="absolute -bottom-2 left-0 right-0 h-0.5 bg-[var(--color1)] transform transition-transform duration-300 ease-out scale-x-0 origin-center"></span>
						</a>
					</li>
				))}
			</ul>
		</nav>
	</div>
	
	<!-- Rodapé do menu -->
	<div class="py-6 text-center text-sm text-[var(--foreground-muted)]">
		© {currentYear} Prod by GUS
	</div>
</div>

<script>
	// Header scroll effect
	const header = document.getElementById('header');
	let lastScroll = 0;

	window.addEventListener('scroll', () => {
		const currentScroll = window.pageYOffset;
		
		if (currentScroll > 10) {
			header?.classList.add('bg-[var(--background)]/65', 'backdrop-blur-xl', 'shadow-lg', 'shadow-[var(--color2)]/30');
			header?.classList.remove('bg-[var(--background)]/85', 'backdrop-blur-md', 'shadow-sm', 'shadow-transparent');
		} else {
			header?.classList.remove('bg-[var(--background)]/65', 'backdrop-blur-xl', 'shadow-lg', 'shadow-[var(--color2)]/30');
			header?.classList.add('bg-[var(--background)]/85', 'backdrop-blur-md', 'shadow-sm', 'shadow-transparent');
		}
		
		lastScroll = currentScroll;
	});

	// Mobile menu functionality
	const menuButton = document.getElementById('menu-button');
	const closeMenuButton = document.getElementById('close-menu');
	const mobileMenu = document.getElementById('mobile-menu');
	const body = document.body;

	menuButton?.addEventListener('click', () => {
		mobileMenu?.classList.remove('hidden');
		body.style.overflow = 'hidden';
	});

	closeMenuButton?.addEventListener('click', () => {
		mobileMenu?.classList.add('hidden');
		body.style.overflow = '';
	});

	// Close menu when clicking on a link
	const mobileLinks = mobileMenu?.querySelectorAll('a');
	mobileLinks?.forEach(link => {
		link.addEventListener('click', () => {
			mobileMenu?.classList.add('hidden');
			body.style.overflow = '';
		});
	});

	// Logo animation
	const logo = document.querySelector('a[href="/"]');
	let logoAnimationInterval: number | null = null;

	const animateLogo = () => {
		logo?.classList.add('scale-105');
		logo?.querySelector('span')?.classList.add('text-[var(--color3)]');
		logo?.querySelector('span')?.classList.remove('text-[var(--color1)]');

		setTimeout(() => {
			logo?.classList.remove('scale-105');
			logo?.querySelector('span')?.classList.remove('text-[var(--color3)]');
			logo?.querySelector('span')?.classList.add('text-[var(--color1)]');
		}, 1800);
	};

	// Start the logo animation interval
	logoAnimationInterval = window.setInterval(animateLogo, 10000);

	// Cleanup on page unload
	window.addEventListener('unload', () => {
		if (logoAnimationInterval) {
			clearInterval(logoAnimationInterval);
		}
	});
</script>
