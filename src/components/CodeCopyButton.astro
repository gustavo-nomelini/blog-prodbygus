---
// CodeCopyButton.astro - Component to add copy buttons to all code blocks
---

<!-- Non-blocking JavaScript to add copy buttons -->
<script is:inline>
  // Function to add copy buttons to code blocks
  function addCopyButtonsToCodeBlocks() {
    // Find code blocks that don't already have a copy button
    const codeBlocks = document.querySelectorAll('pre:not(:has(.copy-button))');
    
    codeBlocks.forEach((pre) => {
      // Ensure pre has position relative
      pre.style.position = 'relative';
      
      // Create a new button
      const copyButton = document.createElement('button');
      copyButton.className = 'copy-button';
      copyButton.setAttribute('type', 'button');
      copyButton.setAttribute('aria-label', 'Copiar código');
      copyButton.setAttribute('title', 'Copiar código');
      copyButton.innerHTML = '<span class="copy-text">Copiar</span>';
      
      // Add the button to the code block
      pre.appendChild(copyButton);
      
      // Add click event
      copyButton.addEventListener('click', async () => {
        const code = pre.querySelector('code');
        if (!code) return;
        
        try {
          await navigator.clipboard.writeText(code.textContent || '');
          copyButton.classList.add('success');
          copyButton.querySelector('.copy-text').textContent = 'Copiado!';
          
          setTimeout(() => {
            copyButton.classList.remove('success');
            copyButton.querySelector('.copy-text').textContent = 'Copiar';
          }, 2000);
        } catch (err) {
          console.error('Erro ao copiar:', err);
          copyButton.classList.add('error');
          copyButton.querySelector('.copy-text').textContent = 'Erro!';
          
          setTimeout(() => {
            copyButton.classList.remove('error');
            copyButton.querySelector('.copy-text').textContent = 'Copiar';
          }, 2000);
        }
      });
    });
  }
  
  // Execute when DOM is ready
  document.addEventListener('DOMContentLoaded', () => {
    // Initial application
    addCopyButtonsToCodeBlocks();
    
    // Set up mutation observer to handle dynamically added code blocks
    const observer = new MutationObserver((mutations) => {
      let shouldAddButtons = false;
      
      mutations.forEach(mutation => {
        if (mutation.type === 'childList' && mutation.addedNodes.length > 0) {
          for (const node of mutation.addedNodes) {
            if (node.nodeType === 1) { // Element node
              if (node.tagName === 'PRE' || node.querySelector('pre')) {
                shouldAddButtons = true;
                break;
              }
            }
          }
        }
      });
      
      if (shouldAddButtons) {
        addCopyButtonsToCodeBlocks();
      }
    });
    
    // Start observing the DOM
    observer.observe(document.body, {
      childList: true,
      subtree: true
    });
  });
</script>

<style is:global>
  /* Styles for the copy button */
  .copy-button {
    position: absolute !important;
    top: 8px !important;
    right: 8px !important;
    display: flex !important;
    align-items: center !important;
    justify-content: center !important;
    padding: 6px 12px !important;
    background-color: rgba(var(--primary-rgb), 0.3) !important;
    color: white !important;
    border: 1px solid rgba(var(--primary-rgb), 0.4) !important;
    border-radius: 4px !important;
    font-family: system-ui, -apple-system, sans-serif !important;
    font-size: 12px !important;
    font-weight: bold !important;
    cursor: pointer !important;
    z-index: 9999 !important;
    opacity: 1 !important;
    visibility: visible !important;
    pointer-events: auto !important;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.3) !important;
    transition: all 0.2s ease !important;
  }
  
  .copy-button:hover {
    background-color: rgba(var(--primary-rgb), 0.5) !important;
    transform: translateY(-1px) !important;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.4) !important;
  }
  
  .copy-button:active {
    transform: translateY(0) !important;
  }
  
  .copy-button.success {
    background-color: var(--accent) !important;
    border-color: var(--accent) !important;
  }
  
  .copy-button.error {
    background-color: var(--error, #c53030) !important;
    border-color: var(--error, #c53030) !important;
  }
  
  /* Ensure space for the copy button */
  pre {
    padding-top: 40px !important;
    position: relative !important;
    overflow: visible !important;
  }
  
  /* Ensure button is always visible */
  [data-rehype-pretty-code-fragment],
  .code-block-wrapper,
  .prose pre,
  .astro-code,
  .shiki,
  pre {
    position: relative !important;
    overflow: visible !important;
  }
  
  .copy-text {
    color: white !important;
    font-weight: bold !important;
  }
</style> 